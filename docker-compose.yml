version: '3.9'

services:
  backend-flask:
    image: zk15xyz/cruddur-backend:latest
    build:
      context: backend-flask/
      dockerfile: Dockerfile
    environment:
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEN_URL: ${BACKEND_URL}
      OTEL_EXPORTER_OTLP_ENDPOINT: https://api.honeycomb.io
      HONEYCOMB_API_KEY: ${HONEYCOMB_API_KEY}
      OTEL_EXPORTER_OTLP_HEADERS: x-honeycomb-team=${HONEYCOMB_API_KEY}
      OTEL_SERVICE_NAME: cruddur-backend
      AWS_XRAY_DAEMON_ADDRESS: xray-daemon:2000
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_REGION}
      ENABLE_CLOUD_WATCH_LOG: False
      AWS_XRAY_SDK_ENABLED: False
      ROLLBAR_ACCESS_TOKEN: ${ROLLBAR_ACCESS_TOKEN}
      ENABLE_ROLLBAR_LOG: False
    ports:
      - 4567:4567
    depends_on:
      - dynamodb-local
      - db
      - xray-daemon
    volumes:
      - ./backend-flask:/backend-flask
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:4567/api/health && echo 'OK' || exit 1"]
      interval: 20s
      timeout: 2s
      retries: 3

  frontend-react-js:
    image: zk15xyz/cruddur-frontend:latest
    build:
      context: frontend-react-js/
      dockerfile: Dockerfile
    environment:
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
      OTEL_SERVICE_NAME: cruddur-front
      HONEYCOMB_API_KEY: ${HONEYCOMB_API_KEY}
      OTEL_EXPORTER_OTLP_ENDPOINT: https://api.honeycomb.io
    ports:
      - 3000:3000
    volumes:
      - ./frontend-react-js:/frontend-react-js
    depends_on:
      backend-flask:
        condition: service_healthy


  dynamodb-local:
    # https://stackoverflow.com/questions/67533058/persist-local-dynamodb-data-in-volumes-lack-permission-unable-to-open-databa
    # We needed to add user:root to get this working.
    user: root
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data

  xray-daemon:
    image: "amazon/aws-xray-daemon"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: eu-west-1
    command:
      - "xray --log-level debug -o -b xray-daemon:2000"
    ports:
      - 2000:2000/udp

networks: 
  internal-network:
    driver: bridge
    name: cruddur
volumes:
  db:
    driver: local