admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 8001 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains:
              - "*"
              typed_per_filter_config:
                envoy.filters.http.cors:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                  allow_origin_string_match:
                  - safe_regex:
                      regex: \*
                  allow_methods: GET, PUT, POST, DELETE, OPTIONS
                  allow_headers: Origin, Content-Type, Accept, Authorization
                  expose_headers: Authorization
                  filter_enabled:
                    default_value:
                      numerator: 100
                      denominator: HUNDRED
                    runtime_key: cors.www.enabled
                  shadow_enabled:
                    default_value:
                      numerator: 0
                      denominator: HUNDRED
                    runtime_key: cors.www.shadow_enabled
              routes:
              - match:
                  prefix: "/api/activities/home"
                route:
                  cluster: local_service
                # typed_per_filter_config:
                #   envoy.filters.http.cors:
                #     "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
                #     filter_enabled:
                #       default_value:
                #         numerator: 0
                #         denominator: HUNDRED
                #     allow_methods: GET, PUT, POST, DELETE, OPTIONS
                #     allow_headers: Origin, Content-Type, Accept, Authorization
                #     expose_headers: Authorization
                #     # max_age: "600"
                #     allow_origin_string_match:
                #     - safe_regex:
                #         regex: \*
                #   timeout: 0s
                # typed_per_filter_config:
                #   envoy.filters.http.ext_authz:
                #     "@type": "type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute"
                #     disabled: false
                #     grpc_service:
                #       envoy_grpc:
                #         cluster_name: ext_authz_cluster
                #     with_request_body:
                #       allow_partial_message: true
          http_filters:
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication"
              providers:
                cognito_provider:
                  issuer: "https://cognito-idp.eu-west-1.amazonaws.com/eu-west-1_pIL9bTPxv"
                  # audiences:
                  #   - "6k3b101ejkmvk1al0tqjqav1vp"
                  remote_jwks:
                    http_uri:
                      uri: "https://cognito-idp.eu-west-1.amazonaws.com/eu-west-1_pIL9bTPxv/.well-known/jwks.json"
                      cluster: jwks_cluster
                      timeout: 5s
                  from_headers:
                    - name: Authorization
                      value_prefix: "Bearer "
                  clock_skew_seconds: 600

                  forward: true
              rules:
                - match:
                    prefix: "/api"
                  requires:
                    provider_name: cognito_provider
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  
  clusters:
  - name: local_service
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: local_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend-flask
                port_value: 4567
  - name: jwks_cluster
    connect_timeout: 1s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: jwks_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: cognito-idp.eu-west-1.amazonaws.com
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
        common_tls_context:
          validation_context:
            trusted_ca:
              filename: /etc/ssl/certs/ca-certificates.crt
  # - name: ext_authz_cluster
  #   connect_timeout: 1s
  #   type: STRICT_DNS
  #   lb_policy: ROUND_ROBIN
  #   load_assignment:
  #     cluster_name: ext_authz_cluster
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           address:
  #             socket_address:
  #               address: backend-flask
  #               port_value: 4567


